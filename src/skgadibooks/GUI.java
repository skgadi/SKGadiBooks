/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package skgadibooks;

import java.awt.Component;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URL;
import java.net.URLDecoder;
import java.net.URLEncoder;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.input.KeyCode;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JEditorPane;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import jdk.nashorn.internal.parser.JSONParser;
import org.json.JSONObject;

/**
 *
 * @author gadis
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        GUIContPane.setVisible(false);
        FoundBooksList.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);
        FoundBooksList.getColumnModel().getColumn(0).setPreferredWidth(10);
        FoundBooksList.getColumnModel().getColumn(1).setPreferredWidth(300);
        FoundBooksList.getColumnModel().getColumn(2).setPreferredWidth(10);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dbDir = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        Status = new javax.swing.JLabel();
        MainGUI = new javax.swing.JPanel();
        GUIContPane = new javax.swing.JPanel();
        MainSplitter = new javax.swing.JSplitPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        dbEntries = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        RefreshDBList = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jButton10 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        SearchOnNet = new javax.swing.JButton();
        OnlineSearchBar = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        FoundBooksList = new javax.swing.JTable();
        OnlineProvider = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        HTMLView = new javax.swing.JEditorPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SKGadi Books");

        dbDir.setEditable(false);
        dbDir.setBackground(new java.awt.Color(238, 238, 238));
        dbDir.setMaximumSize(new java.awt.Dimension(2147483647, 25));
        dbDir.setMinimumSize(new java.awt.Dimension(6, 25));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/skgadibooks/images/FatCow_Icons16x16/breadcrumb_select_current.png"))); // NOI18N
        jButton1.setToolTipText("Select a database");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Status.setText("Sucessfully loaded.");
        Status.setToolTipText("Shows the final operation");
        Status.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        MainSplitter.setDividerLocation(500);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        jTextField1.setToolTipText("Search from the db entries");

        jList1.setToolTipText("Selected item is linked to the following files");
        jScrollPane2.setViewportView(jList1);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/skgadibooks/images/FatCow_Icons16x16/link_add.png"))); // NOI18N
        jButton4.setToolTipText("Link more files");
        jButton4.setEnabled(false);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/skgadibooks/images/FatCow_Icons16x16/link_delete.png"))); // NOI18N
        jButton6.setToolTipText("Remove the link to the selected file");
        jButton6.setEnabled(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/skgadibooks/images/FatCow_Icons16x16/database_add.png"))); // NOI18N
        jButton7.setToolTipText("Add an entry to the database");

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/skgadibooks/images/FatCow_Icons16x16/database_delete.png"))); // NOI18N
        jButton8.setToolTipText("Delete the selected entry from the database");

        RefreshDBList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/skgadibooks/images/FatCow_Icons16x16/arrow_refresh.png"))); // NOI18N
        RefreshDBList.setToolTipText("Refresh");
        RefreshDBList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshDBListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dbEntriesLayout = new javax.swing.GroupLayout(dbEntries);
        dbEntries.setLayout(dbEntriesLayout);
        dbEntriesLayout.setHorizontalGroup(
            dbEntriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
            .addGroup(dbEntriesLayout.createSequentialGroup()
                .addComponent(jScrollPane2)
                .addGap(0, 0, 0)
                .addGroup(dbEntriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING)))
            .addGroup(dbEntriesLayout.createSequentialGroup()
                .addComponent(jTextField1)
                .addGap(0, 0, 0)
                .addComponent(RefreshDBList)
                .addGap(0, 0, 0)
                .addComponent(jButton7)
                .addGap(0, 0, 0)
                .addComponent(jButton8))
        );
        dbEntriesLayout.setVerticalGroup(
            dbEntriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dbEntriesLayout.createSequentialGroup()
                .addGroup(dbEntriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RefreshDBList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField1))
                .addGap(0, 0, 0)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addGroup(dbEntriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(dbEntriesLayout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(0, 0, 0)
                        .addComponent(jButton6))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jTabbedPane1.addTab("Entries", dbEntries);

        jTextField2.setToolTipText("Sarch the files");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable1);

        jList2.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList2.setToolTipText("The selected file is avilable in the following books.");
        jScrollPane5.setViewportView(jList2);

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/skgadibooks/images/FatCow_Icons16x16/arrow_refresh.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTextField2)
                .addGap(0, 0, 0)
                .addComponent(jButton10))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField2))
                .addGap(0, 0, 0)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Files", jPanel1);

        SearchOnNet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/skgadibooks/images/FatCow_Icons16x16/magnifier.png"))); // NOI18N
        SearchOnNet.setToolTipText("Search online");
        SearchOnNet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchOnNetActionPerformed(evt);
            }
        });

        OnlineSearchBar.setToolTipText("Title, ISBN or authors etc.");
        OnlineSearchBar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                OnlineSearchBarKeyPressed(evt);
            }
        });

        FoundBooksList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UniqueID", "Title", "Year"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        FoundBooksList.setToolTipText("Select a row to display its details.");
        jScrollPane6.setViewportView(FoundBooksList);

        OnlineProvider.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Google Books" }));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(OnlineSearchBar)
                .addGap(0, 0, 0)
                .addComponent(OnlineProvider, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(SearchOnNet))
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(OnlineSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(OnlineProvider, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(SearchOnNet, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(0, 0, 0)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Search online", jPanel4);

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setTabSize(5);
        jTextArea1.setToolTipText("Type/paste BibTeX code here.");
        jScrollPane7.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("BibTeX", jPanel5);

        jButton3.setText("Add to database");
        jButton3.setEnabled(false);

        jButton5.setText("Add to database + Link files");
        jButton5.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jTabbedPane2)
                .addGap(0, 0, 0)
                .addComponent(jButton5)
                .addGap(0, 0, 0)
                .addComponent(jButton3))
        );

        jTabbedPane1.addTab("Add to db", jPanel3);

        MainSplitter.setLeftComponent(jTabbedPane1);

        HTMLView.setEditable(false);
        jScrollPane8.setViewportView(HTMLView);

        MainSplitter.setRightComponent(jScrollPane8);

        javax.swing.GroupLayout GUIContPaneLayout = new javax.swing.GroupLayout(GUIContPane);
        GUIContPane.setLayout(GUIContPaneLayout);
        GUIContPaneLayout.setHorizontalGroup(
            GUIContPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1024, Short.MAX_VALUE)
            .addGroup(GUIContPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(MainSplitter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1024, Short.MAX_VALUE))
        );
        GUIContPaneLayout.setVerticalGroup(
            GUIContPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 563, Short.MAX_VALUE)
            .addGroup(GUIContPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(MainSplitter, javax.swing.GroupLayout.DEFAULT_SIZE, 563, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout MainGUILayout = new javax.swing.GroupLayout(MainGUI);
        MainGUI.setLayout(MainGUILayout);
        MainGUILayout.setHorizontalGroup(
            MainGUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(MainGUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(GUIContPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MainGUILayout.setVerticalGroup(
            MainGUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 257, Short.MAX_VALUE)
            .addGroup(MainGUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(GUIContPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(dbDir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jButton1))
            .addComponent(MainGUI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Status, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dbDir, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(MainGUI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(Status, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        jFile.setFileSelectionMode(JFileChooser.OPEN_DIALOG);
        jFile.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        Integer opt = jFile.showOpenDialog(this);
        if (opt == JFileChooser.APPROVE_OPTION) {
            String dbLoc =jFile.getSelectedFile().getPath()+"\\.SKGadiBooksDB";
            File f = new File(dbLoc);
            if(f.exists() && !f.isDirectory()) { 
                OpenDB(dbLoc);
            } else {
                int dialogButton = JOptionPane.YES_NO_OPTION;
                int dialogResult = JOptionPane.showConfirmDialog (null, "The "
                        + "selected folder is not a project folder.\n"
                        + "Do you want to make the selected folder as"
                        + " a new project folder?","Warning",dialogButton);
                if(dialogResult == JOptionPane.YES_OPTION) {
                    OpenDB(dbLoc);
                    CreateDBTables();
                }
            }
        } else
            StatusUpdate("User didn't select new project");

        String html;
        html="<html><head><title>Simple Page</title></head>";
        html+="<body bgcolor='#777779'><hr/><font size=50>This is Html content This is Html content This is Html content This is Html content This is Html content This is Html content This is Html content This is Html content This is Html content This is Html content This is Html content This is Html content This is Html content This is Html content This is Html content This is Html content This is Html content This is Html content This is Html content This is Html content This is Html content This is Html content This is Html content </font><hr/>";
        html+="</body></html>";
        HTMLView.setContentType("text/html");
        HTMLView.setText(html);
        HTMLView.setCaretPosition(0);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void SearchOnNetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchOnNetActionPerformed
        JSONObject obj;
        try {
            if (!OnlineSearchBar.getText().isEmpty()) {
                if (OnlineProvider.getSelectedIndex() == 0) {
                    obj = new JSONObject(getHTML("https://www.googleapis.com/books/v1/volumes?"
                            + "maxResults=40&q=" +
                            URLEncoder.encode(OnlineSearchBar.getText(),"UTF-8")));
                    DefaultTableModel FndBksLst = (DefaultTableModel) FoundBooksList.getModel();
                    int rowCount = FndBksLst.getRowCount();
                    //Remove all the rows
                    for (int i = rowCount - 1; i >= 0; i--) {
                        FndBksLst.removeRow(0);
                    }
                    StatusUpdate("Found "+obj.getInt("totalItems")+" results in"
                            + " Google books. Top 40 results are shown here.");
                    if (obj.getInt("totalItems")>0) {
                        for (int i = 0; i < obj.getJSONArray("items").length(); i++) {
                            String Date="N/A";
                            if (obj.getJSONArray("items").getJSONObject(i).getJSONObject("volumeInfo").has("publishedDate"))
                                Date = obj.getJSONArray("items").getJSONObject(0).getJSONObject("volumeInfo").getString("publishedDate");
                            FndBksLst.addRow(new Object[]{
                                obj.getJSONArray("items").getJSONObject(i).getString("id"),
                                obj.getJSONArray("items").getJSONObject(i).getJSONObject("volumeInfo").getString("title"),
                                Date
                            });
                        }
                    }
                    
                }
            } else {
                StatusUpdate("Query cannot be empty to search online.");
            }
            
            
        } catch (Exception ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_SearchOnNetActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void RefreshDBListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshDBListActionPerformed
        
    }//GEN-LAST:event_RefreshDBListActionPerformed

    private void OnlineSearchBarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_OnlineSearchBarKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10)
            SearchOnNet.doClick();
    }//GEN-LAST:event_OnlineSearchBarKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                
                new GUI().setVisible(true);
                
                
                
            }
        });
    }
    
    
    public static String getHTML(String urlToRead) throws Exception {
        StringBuilder result = new StringBuilder();
        URL url = new URL(urlToRead);
        HttpURLConnection conn = (HttpURLConnection) url.openConnection();
        conn.setRequestMethod("GET");
        BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));
        String line;
        while ((line = rd.readLine()) != null) {
           result.append(line);
        }
        rd.close();
        return result.toString();
    }
    private boolean StatusUpdate(String Message) {
        System.out.println(Message);
        Status.setText(Message);
        return true;
    }
    
    private void OpenDB(String dbLoc) {
        try {
          Class.forName("org.sqlite.JDBC");
          dbc = DriverManager.getConnection("jdbc:sqlite:"+dbLoc);
        } catch ( Exception e ) {
          System.err.println( e.getClass().getName() + ": " + e.getMessage() );
          System.exit(0);
        }
        dbDir.setText(dbLoc);
        GUIContPane.setVisible(true);
        MainSplitter.repaint();
        StatusUpdate("Project is successfully openend.");
    }
    private void CreateDBTables () {
        try {
            stmt = dbc.createStatement();
            String sql = "CREATE TABLE Books "
                    + "(Title TEXT NOT NULL," 
                    + "UniqueID TEXT NOT NULL)";
            stmt.executeUpdate(sql);
            sql = "CREATE TABLE BDetails"
                    + "(UniqueID TEXT NOT NULL,"
                    + "Property TEXT NOT NULL,"
                    + "Value TEXT NOT NULL)";
            stmt.executeUpdate(sql);            
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        StatusUpdate("New database is created along with tables.");
    }
    Connection dbc = null;
    Statement stmt = null;
    JFileChooser jFile = new JFileChooser();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable FoundBooksList;
    private javax.swing.JPanel GUIContPane;
    private javax.swing.JEditorPane HTMLView;
    private javax.swing.JPanel MainGUI;
    private javax.swing.JSplitPane MainSplitter;
    private javax.swing.JComboBox<String> OnlineProvider;
    private javax.swing.JTextField OnlineSearchBar;
    private javax.swing.JButton RefreshDBList;
    private javax.swing.JButton SearchOnNet;
    private javax.swing.JLabel Status;
    private javax.swing.JTextField dbDir;
    private javax.swing.JPanel dbEntries;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
